name: Publish to NuGet

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK (Only for .NET 8 & 9)
        if: runner.os == 'Linux'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            8.0
            9.0
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}

      # Debugging step to check directory structure
      - name: Debug Repository Structure
        run: ls -lah

      # Ensure README.md exists in the package directory
      - name: Ensure README.md is copied
        run: cp README.md FibPaymentSdk/README.md || echo "README.md already in place"

      # Ensure `logo.png` is included in the package
      - name: Ensure logo.png is copied
        run: cp logo.png FibPaymentSdk/logo.png || echo "logo.png already in place"

      # Verify README.md & logo.png exist before packaging
      - name: Verify README.md and logo.png
        run: ls -lah FibPaymentSdk/ && cat FibPaymentSdk/README.md || echo "README.md NOT FOUND!"

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build the Project (Windows + Linux)
        run: dotnet build --configuration Release --no-restore

      - name: Create NuGet Package (Multi-Targeting)
        run: dotnet pack --configuration Release --no-build --output nupkgs

      - name: Publish to NuGet
        run: dotnet nuget push nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
